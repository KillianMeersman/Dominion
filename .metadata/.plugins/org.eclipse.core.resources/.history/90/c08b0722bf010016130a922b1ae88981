package Engine;

import java.util.Collections;
import java.util.ArrayList;
import java.util.List;

public class Player {
	public Game game = null;
	public String name = null;
	public byte actions = 0;
	public byte buys = 0;
	public int coins = 0;
	public List<Card> deck = new ArrayList<Card>();
	public List<Card> hand = new ArrayList<Card>();
	public List<Card> discardPile = new ArrayList<Card>();
	
	// Player card actions
	private void discardToDeck(int amount) {
		Collections.shuffle(discardPile);
		if (discardPile.size() >= amount) {
			for (int i = 0; i < amount; i++) {
				deck.add(discardPile.get(i));
				discardPile.remove(i);
			}
		}
	}
	
	public void shuffleDiscardPile() {
		Collections.shuffle(discardPile);
	}
	
	public Card[] getDeckCards(int amount) {
		Card[] output = new Card[amount];
		
		if (deck.size() >= amount) {
			for (int i = 0; i < amount; i++) {
				output[i] = deck.get(i);
				deck.remove(i);
			}
		}
		else {
			deck.toArray(output);
		}
		return output;
	}
	
	public void transferCards(List<Card> source, List<Card> destination, int amount, boolean removeSource ) {
		for (int i = 0; i < amount; i++) {
			destination.add(source.get(i));
			if (removeSource) { source.remove(i); }
		}
	}
	
	public Player(String name) {
		this.name = name;
	}
}